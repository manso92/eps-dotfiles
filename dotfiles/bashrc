#!/usr/bin/env bash


# Incluye las cosas que esten en la UnidadH/
UnidadH="$HOME/UnidadH"
export PATH="$UnidadH/bin:$UnidadH/eps-dotfiles/bin:$PATH"
export MANPATH="$UnidadH/share/man:$MANPATH"
export LIBRARY_PATH="$UnidadH/lib:$LIBRARY_PATH"
export CPATH="$UnidadH/include:$CPATH"


# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac


#Configuracion de el historial de comandos

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth
HISTSIZE=1000
HISTFILESIZE=2000

shopt -s histappend

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

use_color=false

# Set colorful PS1 only on colorful terminals.
# dircolors --print-database uses its own built-in database
# instead of using /etc/DIR_COLORS.  Try to use the external file
# first to take advantage of user additions.  Use internal bash
# globbing instead of external grep binary.
safe_term=${TERM//[^[:alnum:]]/?}   # sanitize TERM
match_lhs=""
[[ -f ~/.dir_colors   ]] && match_lhs="${match_lhs}$(<~/.dir_colors)"
[[ -f /etc/DIR_COLORS ]] && match_lhs="${match_lhs}$(</etc/DIR_COLORS)"
[[ -z ${match_lhs}    ]] \
        && type -P dircolors >/dev/null \
        && match_lhs=$(dircolors --print-database)
[[ $'\n'${match_lhs} == *$'\n'"TERM "${safe_term}* ]] && use_color=true

if ${use_color} ; then
        # Enable colors for ls, etc.  Prefer ~/.dir_colors #64489
        if type -P dircolors >/dev/null ; then
                if [[ -f ~/.dir_colors ]] ; then
                        eval $(dircolors -b ~/.dir_colors)
                elif [[ -f /etc/DIR_COLORS ]] ; then
                        eval $(dircolors -b /etc/DIR_COLORS)
        else
            eval $(dircolors)
                fi
        fi

        if [[ ${EUID} == 0 ]] ; then
                PS1='${debian_chroot:+($debian_chroot)}\[\033[01;31m\]\h\[\033[01;34m\] \W \$\[\033[00m\] '
        else
                PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[01;34m\] \w \$\[\033[00m\] '
        fi

        alias ls='ls --color=auto'
        alias grep='grep --colour=auto'
else
        if [[ ${EUID} == 0 ]] ; then
                # show root@ when we don't have colors
                PS1='\u@\h \W \$ '
        else
                PS1='\u@\h \w \$ '
        fi
fi

# Try to keep environment pollution down, EPA loves us.
unset use_color safe_term match_lhs

# Quitamos la sugerencias de instalacion
unset -f command_not_found_handle

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.
if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable bash completion in interactive shells
if [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
fi

# Autocompletar en la UnidadH
if [ -f $UnidadH/etc/bash_completion ]; then
    source $UnidadH/etc/bash_completion
fi

#Funciones auxiliares

# Ayuda
help() {
    builtin help "$@" | less
}


extract () {
    if [ -f $1 ]; then
        case $1 in
                *.tar.bz2)  tar xvjf $1                                 ;;
                *.tar.gz)   tar xvzf $1                                 ;;
                *.bz2)      bunzip2 $1                                  ;;
                *.rar)      rar x $1                                    ;;
                *.gz)       gunzip $1                                   ;;
                *.tar)      tar xvf $1                                  ;;
                *.tbz2)     tar xvjf $1                                 ;;
                *.tgz)      tar xvzf $1                                 ;;
                *.tar.xz)   tar xvJf $1                                 ;;
                *.zip)      unzip $1                                    ;;
                *.Z)        uncompress $1                               ;;
                *.7z)       7z x $1                                     ;;
                *)          echo "Extension no conocida '$1'..."    ;;
        esac
    else
        echo "'$1' no es un archivo valido"
    fi
}

swap() {
    local TMPFILE=tmp.$$
    mv "$1" $TMPFILE
    mv "$2" "$1"
    mv $TMPFILE "$2"
}
