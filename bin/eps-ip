#!/usr/bin/env bash

function usage
{
    echo "usage: eps-ip [-h] [n] [m]"
    echo "  -h      display this help and exit"
    echo "       'eps-ip' - prints the private ip"
    echo "       'eps-ip n' - prints the private ip plus n"
    echo "       'eps-ip n m' - prints ip privates in the range [ip+n , ip) U (ip, ip+m]"
    exit 1
}

#https://gist.github.com/jjarmoc/1299906
function atoi
{
    #Returns the integer representation of an IP arg, passed in ascii dotted-decimal notation (x.x.x.x)
    IP=$1; IPNUM=0
    for (( i=0 ; i<4 ; ++i )); do
    ((IPNUM+=${IP%%.*}*$((256**$((3-${i}))))))
    IP=${IP#*.}
    done
    echo $IPNUM
}

function itoa
{
    #returns the dotted-decimal ascii form of an IP arg passed in integer format
    echo -n $(($(($(($((${1}/256))/256))/256))%256)).
    echo -n $(($(($((${1}/256))/256))%256)).
    echo -n $(($((${1}/256))%256)).
    echo $((${1}%256))
}

if [[ $@ =~ (^|[[:space:]])-h($|[[:space:]]) ]]; then

    usage
    exit 1
fi

if [ $# -gt 2 ]; then

    echo "Error too many arguments"
    usage
    exit 1
fi

ip=$(hostname -I | cut -f 1 -d " ")
min=0
max=0

if [ -z $ip ]; then
    echo Check internet conection
    exit 1
fi


if [ $# -eq 0 ]; then
    echo $ip
    exit 0
fi

if [ $# -eq 1 ]; then
    echo $(itoa $(($(atoi $ip) + $1)))
    exit 0
fi

if [ $# -eq 2 ]; then
    min=$1
    max=$2
fi


# Swap range limits
if [ "$min" -gt "$max" ]; then
    aux=$min
    min=$max
    max=$aux
fi

dec=$(atoi $ip)

for i in $(seq $min $max); do

    if [ $i -ne 0 ]; then
        echo -n $(itoa $(($dec + $i))) " "
    fi

done
    echo

exit 0
